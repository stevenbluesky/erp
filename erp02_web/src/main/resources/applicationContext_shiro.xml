<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- 启动shiro注解 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
			depends-on="lifecycleBeanPostProcessor" >
		<!-- 默认使用JDK代理 ，如被代理类没有实现接口，必须使用下列配置开启 cglib代理  -->
		<property name="proxyTargetClass" value="true" />
	</bean>	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<!-- 对安全管理器 增强代码 ， spring 后处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/> 
	
	<!-- 自定义授权过滤器 -->
	<bean id="erpAuthorizationFilter" class="cn.itcast.erp.filter.ErpAuthorizationFilter"></bean>
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 安全管理器：shiro的核心组件 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 认证相关设置：用户必须登录后才可以访问资源，如果没有登录，就跳转·到这个界面 -->
		<property name="loginUrl" value="/login.html" />
		<!-- 授权相关设置：当用户访问了某个没有访问权限的资源时，就跳转到这个界面 -->
		<property name="unauthorizedUrl" value="/unauthorized.html" />
		<!-- 可以配置自己的过滤器 -->
		<property name="filters">
			<map>
				<entry key="perms" value-ref="erpAuthorizationFilter"></entry>
			</map>
		</property>
		<!-- 过滤器链，用来设置页面的访问规则 -->
		<property name="filterChainDefinitions">
			<value>
				#URL匹配的规则，从上往下，第一匹配原则
				#这些规则都保存在一个map集合中，key为=左边的url，value为=号右边的内容
				
				#资源文件的过滤处理
				/error.html =anon
				/unauthorized.html =anon
				/login_*.action=anon
				/login.html=anon
				/adminjs/**=anon
				/css/**=anon
				/images/**=anon
				/js/**=anon
				/ui/**=anon
				
				#/goodstype.html=perms["商品类型"]
				#/goodstype_*=perms["商品类型"]
				/goods.html=perms["商品"]
				/goods_get.action=perms["商品"]
				/goods_add.action=perms["商品"]
				/goods_update.action=perms["商品"]
				/goods_delete.action=perms["商品"]
				/goods_listByPage.action=perms["商品"]

				#商品类型
				/goodstype.html=perms["商品类型"]
				/goodstype_get.action=perms["商品类型"]
				/goodstype_add.action=perms["商品类型"]
				/goodstype_update.action=perms["商品类型"]
				/goodstype_delete.action=perms["商品类型"]
				/goodstype_listByPage.action=perms["商品类型"]

				#员工
				/emp.html=perms["员工"]
				/emp_get.action=perms["员工"]
				/emp_add.action=perms["员工"]
				/emp_update.action=perms["员工"]
				/emp_delete.action=perms["员工"]
				/emp_listByPage.action=perms["员工"]

				#部门
				/dep.html=perms["部门"]
				/dep_get.action=perms["部门"]
				/dep_add.action=perms["部门"]
				/dep_update.action=perms["部门"]
				/dep_delete.action=perms["部门"]
				/dep_listByPage.action=perms["部门"]

				#供应商及客户
				/supplier.html=perms["供应商","客户"]
				/supplier_get.action=perms["供应商","客户"]
				/supplier_add.action=perms["供应商","客户"]
				/supplier_update.action=perms["供应商","客户"]
				/supplier_delete.action=perms["供应商","客户"]
				/supplier_listByPage.action=perms["供应商","客户"]

				#仓库
				/store.html=perms[仓库]
				/store_get.action=perms[仓库]
				/store_add.action=perms[仓库]
				/store_update.action=perms[仓库]
				/store_delete.action=perms[仓库]
				/store_listByPage.action=perms[仓库]

				#订单
				/orders.html=perms["我的采购订单","采购订单查询","采购审核","采购确认","采购入库","我的销售订单","销售订单查询","销售订单出库"]
				/orders_add.action=perms["我的采购订单","我的销售订单"]
				/orders_myListByPage.action=perms["我的采购订单","我的销售订单"]
				/orders_listByPage.action=perms["采购订单查询","采购审核","采购确认","采购入库","销售订单查询","销售订单出库"]
				#进行了细颗粒权限设置，此处不再配置
				#/orders_doCheck.action=perms["采购审核"]
				#/orders_doStart.action=perms["采购确认"]
				/orderdetail_doInStore.action=perms["采购入库"]
				/orderdetail_doOutStore.action=perms["销售订单出库"]

				#退货
				/returnorders.html=perms["销售退货","销售退货审核","销售退货入库"]
				#库存
				/storedetail.html=perms["库存查询"]
				/storedetail_listByPage.action=perms["库存查询"]

				#库存变更记录
				/storeoper.html=perms["库存变更记录"]
				/storeoper_listByPage.action=perms["库存变更记录"]

				#统计报表
				/report_orders.html=perms["销售统计"]
				/report_order.action=perms["销售统计"]
				/report_trend.html=perms["销售趋势"]
				/report_trend.action=perms["销售趋势"]

				#角色设置
				/role.html=perms["角色管理"]
				/role_get.action=perms["角色管理"]
				/role_add.action=perms["角色管理"]
				/role_update.action=perms["角色管理"]
				/role_delete.action=perms["角色管理"]
				/role_listByPage.action=perms["角色管理"]

				#角色权限
				/roleMenuSet.html=perms["角色权限设置"]
				/role_readRoleMenus.action=perms["角色权限设置"]
				/role_updateRoleMenus.action=perms["角色权限设置"]

				#用户角色
				/empRoleSet.html=perms["用户角色设置"]
				/emp_readEmpRoles.action=perms["用户角色设置"]
				/emp_updateEmpRoles.action=perms["用户角色设置"]

				#重置密码
				/pwd.html=perms["重置密码"]
				/emp_updatePwd_reset.action=perms["重置密码"]

				#功能引用
				/emp_listByPage.action=perms["重置密码",]
				/emp_list.action=perms["用户角色设置","库存变更记录"]

				/goodstype_list.action=perms["商品"]
				/goods_list.action=perms["我的采购订单","我的销售订单","库存查询","库存变更记录"]

				/store_mylist.action=perms["采购入库","销售订单出库"]
				/store_list.action=perms["库存查询","库存变更记录"]

				/supplier_list.action=perms["我的采购订单","我的销售订单"]

				/dep_list.action=perms["员工"]

				/role_list.action=perms["角色权限设置"]
				
				
				/** = authc
			</value>
		</property>
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="erpRealm"></property>
	</bean>
	<!-- 自定义realm，实现登录认证与授权 -->
	
	<bean id="erpRealm" class="cn.itcast.erp.realm.ErpRealm">
		<property name="empBiz" ref="empBiz"></property>
		<property name="menuBiz" ref="menuBiz"></property>
	</bean>

</beans>